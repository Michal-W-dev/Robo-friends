{"version":3,"sources":["components/Card.js","components/Scroll.js","components/CardDeck.js","assets/loader.svg","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","src","name","email","className","alt","Scroll","props","style","overflowY","height","borderTop","children","CardDeck","this","robots","map","el","i","id","Component","SearchBox","htmlFor","type","placeholder","onChange","inputChange","App","componentDidMount","fetch","then","res","json","data","setState","catch","err","console","log","onInputChange","e","search","target","value","state","filteredRobots","filter","val","toLowerCase","includes","length","loader","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAYeA,G,MAVF,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAd,OACT,sBAAKC,UAAU,OAAf,UACI,qBAAKH,IAAKA,EAAKI,IAAI,WACnB,sBAAKD,UAAU,YAAf,UACI,kCAAKF,EAAL,OACA,kCAAKC,EAAL,eCJCG,EAAS,SAACC,GACnB,OACI,qBAAKC,MAAO,CACRC,UAAW,SAAUC,OAAQ,OAAQC,UAAW,qCADpD,SAGMJ,EAAMK,YCWLC,G,6KAVP,OACI,cAAC,EAAD,UACI,qBAAKT,UAAU,WAAf,SACKU,KAAKP,MAAMQ,OAAOC,KAAI,SAACC,EAAIC,GAAL,OAAW,cAAC,EAAD,CAAcjB,IAPxD,yBAOoEgB,EAAGE,GAAK,IAAM,YAAajB,KAAMe,EAAGf,KAAMC,MAAOc,EAAGd,OAAnEe,c,GAL1CE,cCPR,MAA0B,mCCgB1BC,G,mLATP,OACI,sBAAKjB,UAAU,YAAf,UACI,uBAAOkB,QAAQ,SAAf,4BACA,uBAAOH,GAAG,SAASI,KAAK,OAAOC,YAAY,QAAQC,SAAUX,KAAKP,MAAMmB,qB,GALhEN,cCqCTO,E,kDAnCb,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IAMRqB,kBAAoB,WAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEnB,OAAQkB,OACrCE,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,SAAUF,OAXvB,EAcnBG,cAAgB,SAACC,GACf,EAAKN,SAAS,CAAEO,OAAQD,EAAEE,OAAOC,SAbjC,EAAKC,MAAQ,CACX7B,OAAQ,GACR0B,OAAQ,IAJO,E,qDAiBT,IAAD,EACoB3B,KAAK8B,MAAxB7B,EADD,EACCA,OAAQ0B,EADT,EACSA,OACVI,EAAiB9B,EAAO+B,QAAO,SAAAC,GAAG,OAAIA,EAAI7C,KAAK8C,cAAcC,SAASR,EAAOO,kBACnF,OAASjC,EAAOmC,OAOb,sBAAK9C,UAAU,MAAf,UACC,oBAAIA,UAAU,aAAd,0BACA,cAAC,EAAD,CAAWsB,YAAaZ,KAAKyB,gBAC7B,cAAC,EAAD,CAAUxB,OAAQ8B,OATnB,sBAAKzC,UAAU,MAAf,UACC,oBAAIA,UAAU,aAAd,0BACA,cAAC,EAAD,CAAWsB,YAAaZ,KAAKyB,gBAC7B,qBAAKnC,UAAU,aAAaH,IAAKkD,EAAQ9C,IAAI,mB,GAzBnCe,aCMHgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.39c44e55.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nconst Card = ({ src, name, email }) => (\r\n    <div className=\"Card\">\r\n        <img src={src} alt=\"robots\" />\r\n        <div className=\"Card-desc\">\r\n            <p> {name} </p>\r\n            <p> {email} </p>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Card;","import React from 'react';\r\n\r\n\r\nexport const Scroll = (props) => {\r\n    return (\r\n        <div style={{\r\n            overflowY: 'scroll', height: '78vh', borderTop: '4px solid rgba(246, 246, 255,0.4)'\r\n        }}>\r\n            { props.children}\r\n        </div >\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport Card from './Card';\r\nimport { Scroll } from './Scroll'\r\nimport './CardDeck.css';\r\n\r\nconst url = 'https://robohash.org/';\r\n\r\nclass CardDeck extends Component {\r\n    render() {\r\n        return (\r\n            <Scroll>\r\n                <div className=\"CardDeck\">\r\n                    {this.props.robots.map((el, i) => <Card key={i} src={url + (el.id + 60) + '?set=set3'} name={el.name} email={el.email} />)}\r\n                </div>\r\n            </Scroll>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardDeck;","export default __webpack_public_path__ + \"static/media/loader.7ed90ab5.svg\";","import { Component } from 'react';\r\nimport './SearchBox.css';\r\n\r\n\r\n\r\nclass SearchBox extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBox\">\r\n                <label htmlFor=\"search\">Search friend:</label>\r\n                <input id=\"search\" type='text' placeholder=\" name\" onChange={this.props.inputChange} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from 'react'\nimport CardDeck from '../components/CardDeck';\nimport loader from '../assets/loader.svg'\nimport './App.css';\nimport SearchBox from '../components/SearchBox';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      robots: [],\n      search: ''\n    }\n  }\n  componentDidMount = () => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(data => this.setState({ robots: data }))\n      .catch((err) => console.log('ERROR!', err))\n  }\n\n  onInputChange = (e) => {\n    this.setState({ search: e.target.value })\n  }\n  render() {\n    const { robots, search } = this.state;\n    const filteredRobots = robots.filter(val => val.name.toLowerCase().includes(search.toLowerCase()));\n    return (!robots.length) ?\n      (<div className=\"App\">\n        <h1 className=\"App-header\">Robo Friends</h1>\n        <SearchBox inputChange={this.onInputChange} />\n        <img className=\"App-loader\" src={loader} alt=\"loading\" />\n      </div>)\n      :\n      (<div className=\"App\">\n        <h1 className=\"App-header\">Robo Friends</h1>\n        <SearchBox inputChange={this.onInputChange} />\n        <CardDeck robots={filteredRobots} />\n      </div>);\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}